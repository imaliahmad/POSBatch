
@model IEnumerable<MyPOS.ViewModels.CategoryMasterVM>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/js/site.js"></script>
<div class="container-fluid p-0">
    <div class="mb-3">
            <h1 class="h3 d-inline align-middle">Category List</h1>
            <a id="createNew" onclick="categoryAction.slideToggle()" class="badge bg-primary text-white ms-2" href="#" style="text-decoration:none; font-size: 14px;">
                Create New
            </a>
      </div>
        <div class="row pt-3" id="categoryFormDiv">     

            <div class="col-md-12 col-xl-12">
                <div class="card mb-3">
                    <div class="card-body">
                        <form id="categoryForm">
                            <fieldset>
                                <input type="hidden" name="CategoryId" id="CategoryId" />
                                <div class="form-group mb-3">
                                    <label class="form-label">Name</label>
                                    <input type="text" class="form-control" placeholder="Enter name" id="Name" name="Name" />
                                    <div class="form-text text-end">Max Character Limit: 30</div>
                                </div>

                                <div class="form-group mb-3">
                                    <label class="form-label">Description</label>
                                    <textarea class="form-control" rows="2" placeholder="Enter description" id="Description" name="Description"></textarea>
                                    <div class="form-text text-end">Max Character Limit: 250</div>
                                </div>
                                <div class="form-group mb-3">
                                    <label class="form-label">Status</label>
                                    <label class="form-check">
                                        <input class="form-check-input" type="checkbox" value="true" id="IsActive" name="IsActive">
                                        <span class="form-check-label">Active</span>
                                    </label>
                                </div>
                                <button type="button" class="btn btn-success" id="btnSave" onclick="categoryAction.Save()">Save</button>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row card pt-3">
            <div class="col-md-12 col-xl-12">
                <table class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="categoryListDiv">
                    @if (Model != null && Model.Count() > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.CategoryId</td>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>
                                    <button type="button" class="btn btn-warning" onclick='categoryAction.Edit(@item.CategoryId, this)'> Edit </button> |
                                    <button type="button" class="btn btn-danger" onclick='Delete(@item.CategoryId, this)'> Delete </button>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
</div>
<style>
    .border-error {
        border: 1px solid red;
    }
</style>

<script>
  $(document).ready(function(){    
        var currentRow;
  });
        $('#categoryForm').validate({
            rules:
            {
                Name: { required: true, maxlength: 30 },
                Description: 
                {                    
                    maxlength: 250
                },
            },
            messages:
            {
                Name: 
                {
                    required: "Name is required.",
                    maxlength: "You can only enter 30 characters."
                },
                Description:
                {
                    maxlength: "You can only enter 250 characters."
                }
            },
            highlight: function (element) {
                //debugger;

                $(element).parent().addClass('text-danger');
                $(element).parent().find('.form-control').addClass('border-error');
            },
            unhighlight: function (element) {
                // debugger;
                $(element).parent().removeClass('text-danger');
                $(element).parent().find('.form-control').removeClass('border-error');
            }

        });

    var categoryAction = 
    {
        slideToggle: function(){
             $('#categoryFormDiv').slideToggle();
        },
        Edit: function(cid, element)
        {  
            debugger;
            currentRow = $(element).closest('tr'); // find
            
            $.ajax({
                type: 'GET',
                url: '@Url.Action("CreateOrEdit","CategoryMaster")',
                data: {id: cid},
                success: function(response){
                
                    if(response != undefined)
                    {
                         if(response.isSuccess)
                         {
                             var data = response.data;

                             $('#CategoryId').val(data.categoryId);
                             $('#Name').val(data.name);
                             $('#Description').val(data.description);
                             $('#IsActive').prop('checked', data.isActive);

                             $('#categoryFormDiv').slideToggle();

                         }
                         else
                         {
                            notyf.open({ type: 'error', message: response.message  });
                         }
                    }
                    else        
                    {
                       notyf.open({ type: 'error', message: "Something went wrong." });
                    }
                     
                },
                error: function(err){
                  notyf.open({ type: 'error', message: err.statusText });
               }
            });
        },
        Save: function(){    
            
            debugger;
            if (!$('#categoryForm').valid())  //check validation
            {
                return false;
            }

            var cId = $('#CategoryId').val();

            $.ajax({
               type: 'POST',
               url: '@Url.Action("CreateOrEdit", "CategoryMaster")', // /Controller/Index
               data: $('#categoryForm').serialize(),
               success: function(response){
                    debugger;                   
                    if(response != undefined)
                    {
                         if(response.isSuccess)
                         {
                             var data = response.data;
                             if(cId != '') //edit
                             {
                                    currentRow.find('td:eq(1)').text(data.name);
                                    currentRow.find('td:eq(2)').text(data.description);

                                      window.scrollTo(0, 0);
                                      $('#categoryForm')[0].reset();
                                      $('#categoryFormDiv').slideToggle();
                                     notyf.open({ type: 'success', message: 'Record saved successfully.'  });
                             }
                             else //insert
                             {
                                 var row = `<tr>
                                                        <td>${data.categoryId}</td>
                                                        <td>${data.name}</td>
                                                        <td>${data.description}</td>
                                                        <td>
                                                           <button type="button" class="btn btn-warning" onclick='categoryAction.Edit(${data.categoryId}, this)'> Edit </button> |
                                                           <button type="button" class="btn btn-danger" onclick='Delete(${data.categoryId}, this)'> Delete </button>
                                                        </td>
                                                     </tr>`;
                                 
                                      $('#categoryListDiv').append(row);
                                      window.scrollTo(0, 0);
                                      $('#categoryForm')[0].reset();
                                      $('#categoryFormDiv').slideToggle();
                                     notyf.open({ type: 'success', message: 'Record saved successfully.'  });
                             }
                                
                         }
                         else
                         {
                            notyf.open({ type: 'error', message: response.message  });
                         }
                    }
                    else        
                    {
                       notyf.open({ type: 'error', message: "Something went wrong." });
                    }
               },
               error: function(err){
                  notyf.open({ type: 'error', message: err.statusText });
               }
            });
        
        }
    
    };

</script>


